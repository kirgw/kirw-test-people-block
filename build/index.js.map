{"version":3,"file":"index.js","mappings":"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","sources":["webpack://kirw-test-people-block/external window [\"wp\",\"element\"]","webpack://kirw-test-people-block/webpack/bootstrap","webpack://kirw-test-people-block/webpack/runtime/compat get default export","webpack://kirw-test-people-block/webpack/runtime/define property getters","webpack://kirw-test-people-block/webpack/runtime/hasOwnProperty shorthand","webpack://kirw-test-people-block/webpack/runtime/make namespace object","webpack://kirw-test-people-block/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Import WP elements\r\nimport { useState, useEffect } from '@wordpress/element'; \r\nconst { registerBlockType } = wp.blocks;\r\nconst { withSelect } = wp.data;\r\nconst { CheckboxControl } = wp.components;\r\n\r\n// Register the block\r\nregisterBlockType( 'kw-test/people-block', {\r\n  title: 'People Block',\r\n  icon: 'groups',\r\n  category: 'widgets',\r\n\r\n  // Set attribute of selected\r\n  attributes: {\r\n    selectedPeople: {\r\n        type: 'array',\r\n        default: []\r\n    }\r\n  },\r\n\r\n  // Retrieve the list of people from the backend\r\n  edit: withSelect( ( select ) => {\r\n\r\n    // Retrieve the getEntityRecords function\r\n    const { getEntityRecords } = select( 'core' ); \r\n\r\n    // Return the list of 'people' custom post type objects\r\n    const query = { per_page: -1, post_type: 'people'};\r\n    const people = { peopleList: getEntityRecords( 'postType', 'people', query ) };\r\n    return people;\r\n  } )( PeopleBlockEdit ), // Call PeopleBlockEdit function and pass 'people' custom post type objects\r\n\r\n  // Save function that outputs the list of selected IDs as shortcode\r\n  save: ( { attributes } ) => {\r\n    const { selectedPeople } = attributes;\r\n    return selectedPeople ? `[kw-peopleblock ids=\"${selectedPeople.join(',')}\"]` : '';\r\n  },\r\n\r\n}); // registerBlockType end\r\n\r\n\r\n// Function that displays the list of 'people' posts as checkboxes\r\nfunction PeopleBlockEdit( { peopleList, attributes, setAttributes } ) {\r\n\r\n  // State variable for selected people\r\n  const [selectedPeople, setSelectedPeople] = useState( [] ); \r\n\r\n  // Retrieve the selected people from the attributes on component mount\r\n  useEffect( () => {\r\n    const { selectedPeople } = attributes;\r\n    if ( selectedPeople ) {\r\n      setSelectedPeople( selectedPeople );\r\n    }\r\n  }, [] );\r\n\r\n  // Handle changes to the selectedPeople state\r\n  function onChangeSelectedPeople( newSelected ) {\r\n    setSelectedPeople( newSelected ); // Update the state\r\n    setAttributes( { selectedPeople: newSelected } ); // Pass the updated state to the backend\r\n  }\r\n\r\n  // Check if the list of people list is empty and show a loading message\r\n  if ( !peopleList ) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  // Map the posts to checkboxes\r\n  const peopleCheckboxes = peopleList.map( ( person ) => {\r\n\r\n    return (\r\n      <CheckboxControl\r\n\r\n        key={person.id}\r\n        label={person.title.rendered} \r\n        checked={selectedPeople.includes( person.id )}\r\n\r\n        onChange={( isChecked ) => {\r\n\r\n            // Set checked/unchecked with add post ID in the state\r\n            const newSelected = isChecked ? [ ...selectedPeople, person.id ] : selectedPeople.filter( ( id ) => id !== person.id );\r\n\r\n            // Update state\r\n            onChangeSelectedPeople( newSelected );\r\n          }\r\n        }\r\n\r\n      />\r\n    );\r\n    \r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {peopleCheckboxes}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useState","useEffect","registerBlockType","wp","blocks","withSelect","data","CheckboxControl","components","title","icon","category","attributes","selectedPeople","type","default","edit","select","getEntityRecords","query","per_page","post_type","people","peopleList","PeopleBlockEdit","save","_ref","join","_ref2","setAttributes","setSelectedPeople","onChangeSelectedPeople","newSelected","peopleCheckboxes","map","person","createElement","key","id","label","rendered","checked","includes","onChange","isChecked","filter"],"sourceRoot":""}